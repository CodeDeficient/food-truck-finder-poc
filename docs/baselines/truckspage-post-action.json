[{"filePath":"C:\\AI\\food-truck-finder-poc\\components\\admin\\dashboard\\TrucksPage.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isValidObject' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":23},{"ruleId":"sonarjs/unused-import","severity":2,"message":"Remove this unused import of 'isValidObject'.","line":4,"column":10,"nodeType":"Identifier","messageId":"removeUnusedImport","endLine":4,"endColumn":23,"suggestions":[{"messageId":"suggestRemoveOneVariable","fix":{"range":[186,201],"text":""},"desc":"Remove this variable import"}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'hasProperty' is defined but never used.","line":4,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":36},{"ruleId":"sonarjs/unused-import","severity":2,"message":"Remove this unused import of 'hasProperty'.","line":4,"column":25,"nodeType":"Identifier","messageId":"removeUnusedImport","endLine":4,"endColumn":36,"suggestions":[{"messageId":"suggestRemoveOneVariable","fix":{"range":[199,212],"text":""},"desc":"Remove this variable import"}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isStringArray' is defined but never used.","line":4,"column":38,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":51},{"ruleId":"sonarjs/unused-import","severity":2,"message":"Remove this unused import of 'isStringArray'.","line":4,"column":38,"nodeType":"Identifier","messageId":"removeUnusedImport","endLine":4,"endColumn":51,"suggestions":[{"messageId":"suggestRemoveOneVariable","fix":{"range":[212,227],"text":""},"desc":"Remove this variable import"}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport TruckCard from '@/components/ui/TruckCard';\nimport { FoodTruck } from '@/lib/types'; // Import from actual types file\nimport { isValidObject, hasProperty, isStringArray } from '@/lib/utils/typeGuards';\n\n/**\n* Loads and displays a list of trucks on the dashboard.\n* @example\n* TrucksPage()\n* Returns a container with truck cards or a loading message.\n* @returns {JSX.Element} A container with truck cards or a loading message.\n* @description\n*   - Uses temporary truck data, which should be replaced with real truck loading logic.\n*   - Employs useState to manage the array of trucks.\n*   - Displays 'Loading trucks...' message when truck data is unavailable.\n*/\nconst TrucksPage = () => {\n  const [trucks, setTrucks] = useState<FoodTruck[]>([]);\n\n  useEffect(() => {\n    // Placeholder: Integrate actual truck loading logic here\n    setTrucks([\n      // Temporary data - replace with real query\n      { id: \"1\", name: \"Temp Truck 1\", cuisine_type: [\"American\"], price_range: \"$\", data_quality_score: 0, verification_status: \"pending\", source_urls: [], last_scraped_at: \"\", current_location: { lat: 0, lng: 0, address: \"\", timestamp: \"\" }, operating_hours: { monday: { closed: true }, tuesday: { closed: true }, wednesday: { closed: true }, thursday: { closed: true }, friday: { closed: true }, saturday: { closed: true }, sunday: { closed: true } }, menu: [], contact_info: {}, social_media: {}, created_at: \"\", updated_at: \"\", description: \"\", specialties: [], scheduled_locations: [] },\n      { id: \"2\", name: \"Temp Truck 2\", cuisine_type: [\"Mexican\"], price_range: \"$\", data_quality_score: 0, verification_status: \"pending\", source_urls: [], last_scraped_at: \"\", current_location: { lat: 0, lng: 0, address: \"\", timestamp: \"\" }, operating_hours: { monday: { closed: true }, tuesday: { closed: true }, wednesday: { closed: true }, thursday: { closed: true }, friday: { closed: true }, saturday: { closed: true }, sunday: { closed: true } }, menu: [], contact_info: {}, social_media: {}, created_at: \"\", updated_at: \"\", description: \"\", specialties: [], scheduled_locations: [] }\n    ]);\n  }, []);\n\n  return (\n    <div className=\"trucks-container\">\n      {trucks.length > 0 ? (\n        trucks.map(truck => <TruckCard key={truck.id} title={truck.name} price={truck.price_range ?? ''} reviews={truck.review_count ?? 0} image_url={truck.image_url ?? '/placeholder-logo.png'} rating={truck.average_rating ?? 0} />)\n      ) : (\n        <p>Loading trucks...</p>\n      )}\n    </div>\n  );\n}\n\nexport default TrucksPage;\n","usedDeprecatedRules":[{"ruleId":"sonarjs/updated-loop-counter","replacedBy":[]}]}]

[{"filePath":"C:\\AI\\food-truck-finder-poc\\components\\admin\\dashboard\\TrucksPage.tsx","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":31,"column":45,"nodeType":"MemberExpression","messageId":"anyAssignment","endLine":31,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `error` typed value.","line":31,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":31,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":31,"column":62,"nodeType":"Identifier","messageId":"anyAssignment","endLine":31,"endColumn":67}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\r\nimport TruckCard from '@/components/ui/TruckCard';\r\nimport { Truck } from '@/lib/types'; // Import from actual types file\r\n\r\n/**\r\n* Loads and displays a list of trucks on the dashboard.\r\n* @example\r\n* TrucksPage()\r\n* Returns a container with truck cards or a loading message.\r\n* @returns {JSX.Element} A container with truck cards or a loading message.\r\n* @description\r\n*   - Uses temporary truck data, which should be replaced with real truck loading logic.\r\n*   - Employs useState to manage the array of trucks.\r\n*   - Displays 'Loading trucks...' message when truck data is unavailable.\r\n*/\r\nconst TrucksPage = () => {\r\n  const [trucks, setTrucks] = useState<Truck[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Placeholder: Integrate actual truck loading logic here\r\n    setTrucks([\r\n      // Temporary data - replace with real query\r\n      { id: \"1\", name: \"Temp Truck 1\", cuisine_type: [\"American\"], price_range: \"$\", data_quality_score: 0, verification_status: \"pending\", source_urls: [], last_scraped_at: \"\", current_location: { lat: 0, lng: 0, address: \"\", timestamp: \"\" }, operating_hours: { monday: { closed: true }, tuesday: { closed: true }, wednesday: { closed: true }, thursday: { closed: true }, friday: { closed: true }, saturday: { closed: true }, sunday: { closed: true } }, menu: [], contact_info: {}, social_media: {}, created_at: \"\", updated_at: \"\", description: \"\", specialties: [], scheduled_locations: [] },\r\n      { id: \"2\", name: \"Temp Truck 2\", cuisine_type: [\"Mexican\"], price_range: \"$\", data_quality_score: 0, verification_status: \"pending\", source_urls: [], last_scraped_at: \"\", current_location: { lat: 0, lng: 0, address: \"\", timestamp: \"\" }, operating_hours: { monday: { closed: true }, tuesday: { closed: true }, wednesday: { closed: true }, thursday: { closed: true }, friday: { closed: true }, saturday: { closed: true }, sunday: { closed: true } }, menu: [], contact_info: {}, social_media: {}, created_at: \"\", updated_at: \"\", description: \"\", specialties: [], scheduled_locations: [] }\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"trucks-container\">\r\n      {trucks.length > 0 ? (\r\n        trucks.map(truck => <TruckCard key={truck.id} truck={truck} />)\r\n      ) : (\r\n        <p>Loading trucks...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrucksPage;\r\n","usedDeprecatedRules":[{"ruleId":"sonarjs/updated-loop-counter","replacedBy":[]}]}]

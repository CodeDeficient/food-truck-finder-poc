{
  "timestamp": "2025-07-12T00:12:38.358Z",
  "totalErrors": 18,
  "errorCounts": {
    "@typescript-eslint/no-unsafe-assignment": 6,
    "@typescript-eslint/no-unsafe-call": 5,
    "@typescript-eslint/no-unsafe-return": 1,
    "@typescript-eslint/no-unsafe-member-access": 1,
    "unknown": 2,
    "sonarjs/unused-import": 2,
    "sonarjs/no-unenclosed-multiline-block": 1
  },
  "errorsByRuleAndFile": {
    "@typescript-eslint/no-unsafe-assignment": {
      "/app/api/admin/data-quality/route.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 9,
          "column": 9,
          "nodeType": "VariableDeclarator",
          "messageId": "anyAssignment",
          "endLine": 9,
          "endColumn": 58
        },
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 30,
          "column": 9,
          "nodeType": "VariableDeclarator",
          "messageId": "anyAssignment",
          "endLine": 30,
          "endColumn": 58
        }
      ],
      "/components/admin/dashboard/TrucksPage.tsx": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 31,
          "column": 45,
          "nodeType": "MemberExpression",
          "messageId": "anyAssignment",
          "endLine": 31,
          "endColumn": 53
        },
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 31,
          "column": 62,
          "nodeType": "Identifier",
          "messageId": "anyAssignment",
          "endLine": 31,
          "endColumn": 67
        }
      ],
      "/lib/api/admin/scraping-metrics/handlers.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 7,
          "column": 9,
          "nodeType": "VariableDeclarator",
          "messageId": "anyAssignment",
          "endLine": 7,
          "endColumn": 45
        },
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "severity": 2,
          "message": "Unsafe assignment of an error typed value.",
          "line": 10,
          "column": 5,
          "nodeType": "Property",
          "messageId": "anyAssignment",
          "endLine": 10,
          "endColumn": 18
        }
      ]
    },
    "@typescript-eslint/no-unsafe-call": {
      "/app/api/admin/data-quality/route.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-call",
          "severity": 2,
          "message": "Unsafe call of a(n) `error` type typed value.",
          "line": 9,
          "column": 32,
          "nodeType": "Identifier",
          "messageId": "unsafeCall",
          "endLine": 9,
          "endColumn": 49
        },
        {
          "ruleId": "@typescript-eslint/no-unsafe-call",
          "severity": 2,
          "message": "Unsafe call of a(n) `error` type typed value.",
          "line": 30,
          "column": 32,
          "nodeType": "Identifier",
          "messageId": "unsafeCall",
          "endLine": 30,
          "endColumn": 49
        }
      ],
      "/app/auth/callback/route.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-call",
          "severity": 2,
          "message": "Unsafe call of a(n) `error` type typed value.",
          "line": 38,
          "column": 13,
          "nodeType": "Identifier",
          "messageId": "unsafeCall",
          "endLine": 38,
          "endColumn": 30
        },
        {
          "ruleId": "@typescript-eslint/no-unsafe-call",
          "severity": 2,
          "message": "Unsafe call of a(n) `error` type typed value.",
          "line": 44,
          "column": 22,
          "nodeType": "Identifier",
          "messageId": "unsafeCall",
          "endLine": 44,
          "endColumn": 42
        }
      ],
      "/hooks/useRealtimeAdminEvents.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-call",
          "severity": 2,
          "message": "Unsafe call of a(n) `error` type typed value.",
          "line": 71,
          "column": 3,
          "nodeType": "Identifier",
          "messageId": "unsafeCall",
          "endLine": 71,
          "endColumn": 12
        }
      ]
    },
    "@typescript-eslint/no-unsafe-return": {
      "/app/auth/callback/route.ts": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-return",
          "severity": 2,
          "message": "Unsafe return of a value of type error.",
          "line": 44,
          "column": 9,
          "nodeType": "ReturnStatement",
          "messageId": "unsafeReturn",
          "endLine": 50,
          "endColumn": 12
        }
      ]
    },
    "@typescript-eslint/no-unsafe-member-access": {
      "/components/admin/dashboard/TrucksPage.tsx": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-member-access",
          "severity": 2,
          "message": "Unsafe member access .id on an `error` typed value.",
          "line": 31,
          "column": 51,
          "nodeType": "Identifier",
          "messageId": "unsafeMemberExpression",
          "endLine": 31,
          "endColumn": 53
        }
      ]
    },
    "unknown": {
      "/filter-eslint-errors.cjs": [
        {
          "ruleId": null,
          "nodeType": null,
          "fatal": true,
          "severity": 2,
          "message": "Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): filter-eslint-errors.cjs"
        }
      ],
      "/lib/fallback/supabaseFallback.ts": [
        {
          "ruleId": null,
          "nodeType": null,
          "fatal": true,
          "severity": 2,
          "message": "Parsing error: '>' expected.",
          "line": 210,
          "column": 11
        }
      ]
    },
    "sonarjs/unused-import": {
      "/lib/api/admin/scraping-metrics/handlers.ts": [
        {
          "ruleId": "sonarjs/unused-import",
          "severity": 2,
          "message": "Remove this unused import of 'supabase'.",
          "line": 2,
          "column": 48,
          "nodeType": "Identifier",
          "messageId": "removeUnusedImport",
          "endLine": 2,
          "endColumn": 56,
          "suggestions": [
            {
              "messageId": "suggestRemoveOneVariable",
              "fix": {
                "range": [
                  90,
                  100
                ],
                "text": ""
              },
              "desc": "Remove this variable import"
            }
          ]
        },
        {
          "ruleId": "sonarjs/unused-import",
          "severity": 2,
          "message": "Remove this unused import of 'verifyAdminAccess'.",
          "line": 4,
          "column": 10,
          "nodeType": "Identifier",
          "messageId": "removeUnusedImport",
          "endLine": 4,
          "endColumn": 27,
          "suggestions": [
            {
              "messageId": "suggestRemoveWholeStatement",
              "fix": {
                "range": [
                  169,
                  230
                ],
                "text": ""
              },
              "desc": "Remove this import statement"
            }
          ]
        }
      ]
    },
    "sonarjs/no-unenclosed-multiline-block": {
      "/lib/supabase.ts": [
        {
          "ruleId": "sonarjs/no-unenclosed-multiline-block",
          "severity": 2,
          "message": "This statement will not be executed conditionally; only the first statement will be. The rest will execute unconditionally.",
          "line": 945,
          "column": 68,
          "nodeType": "EmptyStatement",
          "endLine": 945,
          "endColumn": 69
        }
      ]
    }
  },
  "automationCandidates": [
    {
      "ruleId": "@typescript-eslint/no-unsafe-assignment",
      "count": 6,
      "confidence": "MEDIUM",
      "method": "type-annotation",
      "description": "Add type annotations for unsafe assignments",
      "estimatedFixes": 1,
      "priority": 2
    }
  ],
  "recommendations": {
    "highConfidence": {
      "candidates": [],
      "totalFixes": 0,
      "methods": []
    },
    "mediumConfidence": {
      "candidates": [
        {
          "ruleId": "@typescript-eslint/no-unsafe-assignment",
          "count": 6,
          "confidence": "MEDIUM",
          "method": "type-annotation",
          "description": "Add type annotations for unsafe assignments",
          "estimatedFixes": 1,
          "priority": 2
        }
      ],
      "totalFixes": 1,
      "methods": [
        "type-annotation"
      ]
    }
  }
}
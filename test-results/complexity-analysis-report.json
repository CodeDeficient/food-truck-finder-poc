{
  "timestamp": "2025-06-18T01:20:40.010Z",
  "summary": {
    "totalFiles": 56,
    "totalViolations": 99,
    "highPriorityFiles": 12
  },
  "prioritizedFiles": [
    {
      "filePath": "hooks\\useRealtimeAdminEvents.ts",
      "violations": [
        {
          "filePath": "hooks\\useRealtimeAdminEvents.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'createEventSourceConnection' has too many lines (90). Maximum allowed is 50.",
          "line": 110,
          "endLine": 199,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "hooks\\useRealtimeAdminEvents.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'useRealtimeAdminEvents' has too many lines (139). Maximum allowed is 50.",
          "line": 201,
          "endLine": 339,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 258,
      "maxLinesViolation": {
        "current": 139,
        "max": 50,
        "excess": 89
      },
      "violationCount": 2
    },
    {
      "filePath": "components\\ui\\chart.tsx",
      "violations": [
        {
          "filePath": "components\\ui\\chart.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (142). Maximum allowed is 50.",
          "line": 113,
          "endLine": 254,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        },
        {
          "filePath": "components\\ui\\chart.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (77). Maximum allowed is 50.",
          "line": 174,
          "endLine": 250,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 238,
      "maxLinesViolation": {
        "current": 77,
        "max": 50,
        "excess": 27
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\admin\\cron-status\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\cron-status\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (155). Maximum allowed is 50.",
          "line": 55,
          "endLine": 209,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 210,
      "maxLinesViolation": {
        "current": 155,
        "max": 50,
        "excess": 105
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
      "violations": [
        {
          "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'useSystemMetrics' has too many lines (53). Maximum allowed is 50.",
          "line": 63,
          "endLine": 115,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'SystemAlerts' has too many lines (57). Maximum allowed is 50.",
          "line": 180,
          "endLine": 236,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'RealtimeStatusIndicator' has too many lines (140). Maximum allowed is 50.",
          "line": 260,
          "endLine": 399,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 200,
      "maxLinesViolation": {
        "current": 140,
        "max": 50,
        "excess": 90
      },
      "violationCount": 3
    },
    {
      "filePath": "app\\admin\\pipeline\\page.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\pipeline\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'PipelineMonitoringPage' has too many lines (147). Maximum allowed is 50.",
          "line": 59,
          "endLine": 205,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 194,
      "maxLinesViolation": {
        "current": 147,
        "max": 50,
        "excess": 97
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\ui\\sidebar.tsx",
      "violations": [
        {
          "filePath": "components\\ui\\sidebar.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (96). Maximum allowed is 50.",
          "line": 57,
          "endLine": 152,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        },
        {
          "filePath": "components\\ui\\sidebar.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (92). Maximum allowed is 50.",
          "line": 164,
          "endLine": 255,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 176,
      "maxLinesViolation": {
        "current": 92,
        "max": 50,
        "excess": 42
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\admin\\automated-cleanup\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\automated-cleanup\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (70). Maximum allowed is 50.",
          "line": 87,
          "endLine": 156,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\admin\\automated-cleanup\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (114). Maximum allowed is 50.",
          "line": 158,
          "endLine": 271,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 168,
      "maxLinesViolation": {
        "current": 114,
        "max": 50,
        "excess": 64
      },
      "violationCount": 2
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "violations": [
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static async method 'runFullCleanup' has too many lines (55). Maximum allowed is 50.",
          "line": 38,
          "endLine": 92,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static async method 'removePlaceholders' has too many lines (65). Maximum allowed is 50.",
          "line": 187,
          "endLine": 251,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
          "line": 187,
          "endLine": 187,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "line": 256,
          "endLine": 256,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-depth",
          "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
          "line": 272,
          "endLine": 283,
          "severity": 2,
          "nodeType": "TryStatement"
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static async method 'fixCoordinates' has too many lines (54). Maximum allowed is 50.",
          "line": 295,
          "endLine": 348,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 29 to the 15 allowed.",
          "line": 295,
          "endLine": 295,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-depth",
          "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
          "line": 330,
          "endLine": 341,
          "severity": 2,
          "nodeType": "TryStatement"
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "line": 353,
          "endLine": 353,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
          "line": 390,
          "endLine": 390,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\data-quality\\batchCleanup.ts",
          "ruleId": "max-depth",
          "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
          "line": 411,
          "endLine": 418,
          "severity": 2,
          "nodeType": "TryStatement"
        }
      ],
      "severityScore": 153,
      "maxLinesViolation": {
        "current": 54,
        "max": 50,
        "excess": 4
      },
      "violationCount": 11
    },
    {
      "filePath": "app\\admin\\test-pipeline\\page.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\test-pipeline\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'StageResultCard' has too many lines (86). Maximum allowed is 50.",
          "line": 59,
          "endLine": 144,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\admin\\test-pipeline\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'TestPipelineForm' has too many lines (84). Maximum allowed is 50.",
          "line": 147,
          "endLine": 230,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\admin\\test-pipeline\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'TestResultsDisplay' has too many lines (52). Maximum allowed is 50.",
          "line": 249,
          "endLine": 300,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\admin\\test-pipeline\\page.tsx",
          "ruleId": "max-params",
          "message": "Async function 'handleTestPipelineSubmit' has too many parameters (8). Maximum allowed is 4.",
          "line": 303,
          "endLine": 303,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 152,
      "maxLinesViolation": {
        "current": 52,
        "max": 50,
        "excess": 2
      },
      "violationCount": 4
    },
    {
      "filePath": "app\\api\\admin\\realtime-events\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\realtime-events\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (85). Maximum allowed is 50.",
          "line": 40,
          "endLine": 124,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\admin\\realtime-events\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Method 'start' has too many lines (63). Maximum allowed is 50.",
          "line": 50,
          "endLine": 112,
          "severity": 2,
          "nodeType": "Property"
        },
        {
          "filePath": "app\\api\\admin\\realtime-events\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'monitorDataChanges' has too many lines (68). Maximum allowed is 50.",
          "line": 206,
          "endLine": 273,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\admin\\realtime-events\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (59). Maximum allowed is 50.",
          "line": 285,
          "endLine": 343,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 150,
      "maxLinesViolation": {
        "current": 59,
        "max": 50,
        "excess": 9
      },
      "violationCount": 4
    },
    {
      "filePath": "app\\api\\test-integration\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\test-integration\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (124). Maximum allowed is 50.",
          "line": 7,
          "endLine": 130,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 148,
      "maxLinesViolation": {
        "current": 124,
        "max": 50,
        "excess": 74
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\pipelineProcessor.ts",
      "violations": [
        {
          "filePath": "lib\\pipelineProcessor.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'buildTruckDataSchema' has too many lines (66). Maximum allowed is 50.",
          "line": 35,
          "endLine": 100,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "lib\\pipelineProcessor.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'processScrapingJob' has too many lines (106). Maximum allowed is 50.",
          "line": 156,
          "endLine": 261,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 144,
      "maxLinesViolation": {
        "current": 106,
        "max": 50,
        "excess": 56
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\admin\\oauth-status\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\oauth-status\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (109). Maximum allowed is 50.",
          "line": 37,
          "endLine": 145,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\admin\\oauth-status\\route.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "line": 37,
          "endLine": 37,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "app\\api\\admin\\oauth-status\\route.ts",
          "ruleId": "max-depth",
          "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
          "line": 91,
          "endLine": 93,
          "severity": 2,
          "nodeType": "IfStatement"
        }
      ],
      "severityScore": 143,
      "maxLinesViolation": {
        "current": 109,
        "max": 50,
        "excess": 59
      },
      "violationCount": 3
    },
    {
      "filePath": "app\\api\\admin\\data-cleanup\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\data-cleanup\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (91). Maximum allowed is 50.",
          "line": 22,
          "endLine": 112,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\admin\\data-cleanup\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'GET' has too many lines (74). Maximum allowed is 50.",
          "line": 114,
          "endLine": 187,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 130,
      "maxLinesViolation": {
        "current": 74,
        "max": 50,
        "excess": 24
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\login\\page.tsx",
      "violations": [
        {
          "filePath": "app\\login\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'EmailLoginForm' has too many lines (57). Maximum allowed is 50.",
          "line": 27,
          "endLine": 83,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\login\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'LoginPage' has too many lines (107). Maximum allowed is 50.",
          "line": 139,
          "endLine": 245,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 128,
      "maxLinesViolation": {
        "current": 107,
        "max": 50,
        "excess": 57
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\test-pipeline-run\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\test-pipeline-run\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'mapExtractedDataToTruckSchema' has too many lines (54). Maximum allowed is 50.",
          "line": 18,
          "endLine": 71,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\test-pipeline-run\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'handleFirecrawlStage' has too many lines (58). Maximum allowed is 50.",
          "line": 73,
          "endLine": 130,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\test-pipeline-run\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'POST' has too many lines (98). Maximum allowed is 50.",
          "line": 214,
          "endLine": 311,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 120,
      "maxLinesViolation": {
        "current": 98,
        "max": 50,
        "excess": 48
      },
      "violationCount": 3
    },
    {
      "filePath": "app\\api\\admin\\data-quality\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\data-quality\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (107). Maximum allowed is 50.",
          "line": 157,
          "endLine": 263,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 114,
      "maxLinesViolation": {
        "current": 107,
        "max": 50,
        "excess": 57
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\ScraperEngine.ts",
      "violations": [
        {
          "filePath": "lib\\ScraperEngine.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async method 'scrapeWebsite' has too many lines (65). Maximum allowed is 50.",
          "line": 110,
          "endLine": 174,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\ScraperEngine.ts",
          "ruleId": "sonarjs/cognitive-complexity",
          "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "line": 110,
          "endLine": 110,
          "severity": 2,
          "nodeType": null
        },
        {
          "filePath": "lib\\ScraperEngine.ts",
          "ruleId": "max-lines-per-function",
          "message": "Method 'assessTruckData' has too many lines (76). Maximum allowed is 50.",
          "line": 390,
          "endLine": 465,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\ScraperEngine.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async method 'makeGeminiRequest' has too many lines (55). Maximum allowed is 50.",
          "line": 693,
          "endLine": 747,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 107,
      "maxLinesViolation": {
        "current": 55,
        "max": 50,
        "excess": 5
      },
      "violationCount": 4
    },
    {
      "filePath": "lib\\performance\\webVitals.ts",
      "violations": [
        {
          "filePath": "lib\\performance\\webVitals.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'getPerformanceOptimizationSuggestions' has too many lines (102). Maximum allowed is 50.",
          "line": 221,
          "endLine": 322,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 104,
      "maxLinesViolation": {
        "current": 102,
        "max": 50,
        "excess": 52
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\admin\\layout.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\layout.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'DesktopSidebar' has too many lines (74). Maximum allowed is 50.",
          "line": 34,
          "endLine": 107,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\admin\\layout.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'MobileNavigation' has too many lines (76). Maximum allowed is 50.",
          "line": 110,
          "endLine": 185,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 100,
      "maxLinesViolation": {
        "current": 76,
        "max": 50,
        "excess": 26
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\search\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\search\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (95). Maximum allowed is 50.",
          "line": 5,
          "endLine": 99,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 90,
      "maxLinesViolation": {
        "current": 95,
        "max": 50,
        "excess": 45
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\discoveryEngine.ts",
      "violations": [
        {
          "filePath": "lib\\discoveryEngine.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async method 'isFoodTruckUrl' has too many lines (86). Maximum allowed is 50.",
          "line": 363,
          "endLine": 448,
          "severity": 2,
          "nodeType": "MethodDefinition"
        },
        {
          "filePath": "lib\\discoveryEngine.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async method 'storeDiscoveredUrl' has too many lines (58). Maximum allowed is 50.",
          "line": 605,
          "endLine": 662,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 88,
      "maxLinesViolation": {
        "current": 58,
        "max": 50,
        "excess": 8
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\auth\\callback\\route.ts",
      "violations": [
        {
          "filePath": "app\\auth\\callback\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (93). Maximum allowed is 50.",
          "line": 8,
          "endLine": 100,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 86,
      "maxLinesViolation": {
        "current": 93,
        "max": 50,
        "excess": 43
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\middleware.ts",
      "violations": [
        {
          "filePath": "app\\middleware.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'middleware' has too many lines (93). Maximum allowed is 50.",
          "line": 6,
          "endLine": 98,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 86,
      "maxLinesViolation": {
        "current": 93,
        "max": 50,
        "excess": 43
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\ui\\simpleQualityPanel.tsx",
      "violations": [
        {
          "filePath": "components\\ui\\simpleQualityPanel.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (93). Maximum allowed is 50.",
          "line": 13,
          "endLine": 105,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 86,
      "maxLinesViolation": {
        "current": 93,
        "max": 50,
        "excess": 43
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\monitoring\\apiMonitor.ts",
      "violations": [
        {
          "filePath": "lib\\monitoring\\apiMonitor.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static method 'generateAlerts' has too many lines (93). Maximum allowed is 50.",
          "line": 191,
          "endLine": 283,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 86,
      "maxLinesViolation": {
        "current": 93,
        "max": 50,
        "excess": 43
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\scheduler\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\scheduler\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'GET' has too many lines (69). Maximum allowed is 50.",
          "line": 88,
          "endLine": 156,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\scheduler\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (72). Maximum allowed is 50.",
          "line": 158,
          "endLine": 229,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 82,
      "maxLinesViolation": {
        "current": 72,
        "max": 50,
        "excess": 22
      },
      "violationCount": 2
    },
    {
      "filePath": "components\\ui\\carousel.tsx",
      "violations": [
        {
          "filePath": "components\\ui\\carousel.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (91). Maximum allowed is 50.",
          "line": 48,
          "endLine": 138,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 82,
      "maxLinesViolation": {
        "current": 91,
        "max": 50,
        "excess": 41
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\MapDisplay.tsx",
      "violations": [
        {
          "filePath": "components\\MapDisplay.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (90). Maximum allowed is 50.",
          "line": 58,
          "endLine": 147,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 80,
      "maxLinesViolation": {
        "current": 90,
        "max": 50,
        "excess": 40
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\SearchFilters.tsx",
      "violations": [
        {
          "filePath": "components\\SearchFilters.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'MainSearchSection' has too many lines (53). Maximum allowed is 50.",
          "line": 12,
          "endLine": 64,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "components\\SearchFilters.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'SearchFilters' has too many lines (83). Maximum allowed is 50.",
          "line": 176,
          "endLine": 258,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 72,
      "maxLinesViolation": {
        "current": 83,
        "max": 50,
        "excess": 33
      },
      "violationCount": 2
    },
    {
      "filePath": "components\\admin\\cleanup\\CleanupResults.tsx",
      "violations": [
        {
          "filePath": "components\\admin\\cleanup\\CleanupResults.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'CleanupResults' has too many lines (86). Maximum allowed is 50.",
          "line": 16,
          "endLine": 101,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 72,
      "maxLinesViolation": {
        "current": 86,
        "max": 50,
        "excess": 36
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\admin\\page.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'AdminDashboard' has too many lines (84). Maximum allowed is 50.",
          "line": 67,
          "endLine": 150,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 68,
      "maxLinesViolation": {
        "current": 84,
        "max": 50,
        "excess": 34
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\admin\\scraping-metrics\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\admin\\scraping-metrics\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (81). Maximum allowed is 50.",
          "line": 27,
          "endLine": 107,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 62,
      "maxLinesViolation": {
        "current": 81,
        "max": 50,
        "excess": 31
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\cron\\quality-check\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\cron\\quality-check\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'POST' has too many lines (71). Maximum allowed is 50.",
          "line": 17,
          "endLine": 87,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\cron\\quality-check\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'performDataQualityCheck' has too many lines (57). Maximum allowed is 50.",
          "line": 89,
          "endLine": 145,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 56,
      "maxLinesViolation": {
        "current": 57,
        "max": 50,
        "excess": 7
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\api\\pipeline\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\pipeline\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (78). Maximum allowed is 50.",
          "line": 25,
          "endLine": 102,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 56,
      "maxLinesViolation": {
        "current": 78,
        "max": 50,
        "excess": 28
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\cron\\auto-scrape\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\cron\\auto-scrape\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'POST' has too many lines (77). Maximum allowed is 50.",
          "line": 8,
          "endLine": 84,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 54,
      "maxLinesViolation": {
        "current": 77,
        "max": 50,
        "excess": 27
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\monitoring\\api-usage\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\monitoring\\api-usage\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'GET' has too many lines (62). Maximum allowed is 50.",
          "line": 10,
          "endLine": 71,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\monitoring\\api-usage\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (62). Maximum allowed is 50.",
          "line": 73,
          "endLine": 134,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 48,
      "maxLinesViolation": {
        "current": 62,
        "max": 50,
        "excess": 12
      },
      "violationCount": 2
    },
    {
      "filePath": "hooks\\useDataCleanup.ts",
      "violations": [
        {
          "filePath": "hooks\\useDataCleanup.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'useDataCleanup' has too many lines (72). Maximum allowed is 50.",
          "line": 26,
          "endLine": 97,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 44,
      "maxLinesViolation": {
        "current": 72,
        "max": 50,
        "excess": 22
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\gemini\\promptTemplates.ts",
      "violations": [
        {
          "filePath": "lib\\gemini\\promptTemplates.ts",
          "ruleId": "max-lines-per-function",
          "message": "Method 'foodTruckExtraction' has too many lines (69). Maximum allowed is 50.",
          "line": 151,
          "endLine": 219,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 38,
      "maxLinesViolation": {
        "current": 69,
        "max": 50,
        "excess": 19
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\security\\rateLimiter.ts",
      "violations": [
        {
          "filePath": "lib\\security\\rateLimiter.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static method 'checkRateLimit' has too many lines (69). Maximum allowed is 50.",
          "line": 51,
          "endLine": 119,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 38,
      "maxLinesViolation": {
        "current": 69,
        "max": 50,
        "excess": 19
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\admin\\monitoring\\page.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\monitoring\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'FeatureOverviewCards' has too many lines (57). Maximum allowed is 50.",
          "line": 26,
          "endLine": 82,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\admin\\monitoring\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'MonitoringFeaturesCard' has too many lines (59). Maximum allowed is 50.",
          "line": 101,
          "endLine": 159,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 32,
      "maxLinesViolation": {
        "current": 59,
        "max": 50,
        "excess": 9
      },
      "violationCount": 2
    },
    {
      "filePath": "lib\\performance\\databaseCache.ts",
      "violations": [
        {
          "filePath": "lib\\performance\\databaseCache.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async arrow function has too many lines (66). Maximum allowed is 50.",
          "line": 78,
          "endLine": 143,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 32,
      "maxLinesViolation": {
        "current": 66,
        "max": 50,
        "excess": 16
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\admin\\users\\page.tsx",
      "violations": [
        {
          "filePath": "app\\admin\\users\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'UserManagementPage' has too many lines (62). Maximum allowed is 50.",
          "line": 69,
          "endLine": 130,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 24,
      "maxLinesViolation": {
        "current": 62,
        "max": 50,
        "excess": 12
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\security\\auditLogger.ts",
      "violations": [
        {
          "filePath": "lib\\security\\auditLogger.ts",
          "ruleId": "max-params",
          "message": "Static async method 'logAdminAction' has too many parameters (7). Maximum allowed is 4.",
          "line": 42,
          "endLine": 42,
          "severity": 2,
          "nodeType": "FunctionExpression"
        },
        {
          "filePath": "lib\\security\\auditLogger.ts",
          "ruleId": "max-params",
          "message": "Static async method 'logAuthEvent' has too many parameters (5). Maximum allowed is 4.",
          "line": 117,
          "endLine": 117,
          "severity": 2,
          "nodeType": "FunctionExpression"
        },
        {
          "filePath": "lib\\security\\auditLogger.ts",
          "ruleId": "max-params",
          "message": "Static async method 'logDataAccess' has too many parameters (6). Maximum allowed is 4.",
          "line": 143,
          "endLine": 143,
          "severity": 2,
          "nodeType": "FunctionExpression"
        }
      ],
      "severityScore": 24,
      "maxLinesViolation": null,
      "violationCount": 3
    },
    {
      "filePath": "app\\api\\dashboard\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\dashboard\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'GET' has too many lines (61). Maximum allowed is 50.",
          "line": 9,
          "endLine": 69,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 22,
      "maxLinesViolation": {
        "current": 61,
        "max": 50,
        "excess": 11
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\analytics\\web-vitals\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\analytics\\web-vitals\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (53). Maximum allowed is 50.",
          "line": 18,
          "endLine": 70,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\api\\analytics\\web-vitals\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'GET' has too many lines (57). Maximum allowed is 50.",
          "line": 75,
          "endLine": 131,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 20,
      "maxLinesViolation": {
        "current": 57,
        "max": 50,
        "excess": 7
      },
      "violationCount": 2
    },
    {
      "filePath": "app\\page.tsx",
      "violations": [
        {
          "filePath": "app\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'TruckListSection' has too many lines (58). Maximum allowed is 50.",
          "line": 259,
          "endLine": 316,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        },
        {
          "filePath": "app\\page.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'FoodTruckFinder' has too many lines (52). Maximum allowed is 50.",
          "line": 451,
          "endLine": 502,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 20,
      "maxLinesViolation": {
        "current": 52,
        "max": 50,
        "excess": 2
      },
      "violationCount": 2
    },
    {
      "filePath": "components\\ui\\dataQualityCharts.tsx",
      "violations": [
        {
          "filePath": "components\\ui\\dataQualityCharts.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (60). Maximum allowed is 50.",
          "line": 71,
          "endLine": 130,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 20,
      "maxLinesViolation": {
        "current": 60,
        "max": 50,
        "excess": 10
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\firecrawl.ts",
      "violations": [
        {
          "filePath": "lib\\firecrawl.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async method 'crawlWebsite' has too many lines (60). Maximum allowed is 50.",
          "line": 145,
          "endLine": 204,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 20,
      "maxLinesViolation": {
        "current": 60,
        "max": 50,
        "excess": 10
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\firecrawl\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\firecrawl\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Async function 'POST' has too many lines (59). Maximum allowed is 50.",
          "line": 93,
          "endLine": 151,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 18,
      "maxLinesViolation": {
        "current": 59,
        "max": 50,
        "excess": 9
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\trucks\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\trucks\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'GET' has too many lines (59). Maximum allowed is 50.",
          "line": 7,
          "endLine": 65,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 18,
      "maxLinesViolation": {
        "current": 59,
        "max": 50,
        "excess": 9
      },
      "violationCount": 1
    },
    {
      "filePath": "app\\api\\tavily\\route.ts",
      "violations": [
        {
          "filePath": "app\\api\\tavily\\route.ts",
          "ruleId": "max-lines-per-function",
          "message": "Function 'performTavilySearch' has too many lines (58). Maximum allowed is 50.",
          "line": 67,
          "endLine": 124,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 16,
      "maxLinesViolation": {
        "current": 58,
        "max": 50,
        "excess": 8
      },
      "violationCount": 1
    },
    {
      "filePath": "lib\\data-quality\\duplicatePrevention.ts",
      "violations": [
        {
          "filePath": "lib\\data-quality\\duplicatePrevention.ts",
          "ruleId": "max-lines-per-function",
          "message": "Static method 'calculateSimilarity' has too many lines (57). Maximum allowed is 50.",
          "line": 101,
          "endLine": 157,
          "severity": 2,
          "nodeType": "MethodDefinition"
        }
      ],
      "severityScore": 14,
      "maxLinesViolation": {
        "current": 57,
        "max": 50,
        "excess": 7
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\TruckCard.tsx",
      "violations": [
        {
          "filePath": "components\\TruckCard.tsx",
          "ruleId": "max-lines-per-function",
          "message": "Function 'TruckCard' has too many lines (55). Maximum allowed is 50.",
          "line": 317,
          "endLine": 371,
          "severity": 2,
          "nodeType": "FunctionDeclaration"
        }
      ],
      "severityScore": 10,
      "maxLinesViolation": {
        "current": 55,
        "max": 50,
        "excess": 5
      },
      "violationCount": 1
    },
    {
      "filePath": "components\\ui\\UseToast.ts",
      "violations": [
        {
          "filePath": "components\\ui\\UseToast.ts",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (55). Maximum allowed is 50.",
          "line": 65,
          "endLine": 119,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 10,
      "maxLinesViolation": {
        "current": 55,
        "max": 50,
        "excess": 5
      },
      "violationCount": 1
    },
    {
      "filePath": "hooks\\UseToast.ts",
      "violations": [
        {
          "filePath": "hooks\\UseToast.ts",
          "ruleId": "max-lines-per-function",
          "message": "Arrow function has too many lines (55). Maximum allowed is 50.",
          "line": 65,
          "endLine": 119,
          "severity": 2,
          "nodeType": "ArrowFunctionExpression"
        }
      ],
      "severityScore": 10,
      "maxLinesViolation": {
        "current": 55,
        "max": 50,
        "excess": 5
      },
      "violationCount": 1
    }
  ],
  "allViolations": [
    {
      "filePath": "app\\admin\\layout.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'DesktopSidebar' has too many lines (74). Maximum allowed is 50.",
      "line": 34,
      "endLine": 107,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\layout.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'MobileNavigation' has too many lines (76). Maximum allowed is 50.",
      "line": 110,
      "endLine": 185,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\monitoring\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'FeatureOverviewCards' has too many lines (57). Maximum allowed is 50.",
      "line": 26,
      "endLine": 82,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\monitoring\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'MonitoringFeaturesCard' has too many lines (59). Maximum allowed is 50.",
      "line": 101,
      "endLine": 159,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'AdminDashboard' has too many lines (84). Maximum allowed is 50.",
      "line": 67,
      "endLine": 150,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\pipeline\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'PipelineMonitoringPage' has too many lines (147). Maximum allowed is 50.",
      "line": 59,
      "endLine": 205,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\test-pipeline\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'StageResultCard' has too many lines (86). Maximum allowed is 50.",
      "line": 59,
      "endLine": 144,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\test-pipeline\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'TestPipelineForm' has too many lines (84). Maximum allowed is 50.",
      "line": 147,
      "endLine": 230,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\test-pipeline\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'TestResultsDisplay' has too many lines (52). Maximum allowed is 50.",
      "line": 249,
      "endLine": 300,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\test-pipeline\\page.tsx",
      "ruleId": "max-params",
      "message": "Async function 'handleTestPipelineSubmit' has too many parameters (8). Maximum allowed is 4.",
      "line": 303,
      "endLine": 303,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\admin\\users\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'UserManagementPage' has too many lines (62). Maximum allowed is 50.",
      "line": 69,
      "endLine": 130,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\automated-cleanup\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (70). Maximum allowed is 50.",
      "line": 87,
      "endLine": 156,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\automated-cleanup\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (114). Maximum allowed is 50.",
      "line": 158,
      "endLine": 271,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\cron-status\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (155). Maximum allowed is 50.",
      "line": 55,
      "endLine": 209,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\data-cleanup\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (91). Maximum allowed is 50.",
      "line": 22,
      "endLine": 112,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\data-cleanup\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'GET' has too many lines (74). Maximum allowed is 50.",
      "line": 114,
      "endLine": 187,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\data-quality\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (107). Maximum allowed is 50.",
      "line": 157,
      "endLine": 263,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\oauth-status\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (109). Maximum allowed is 50.",
      "line": 37,
      "endLine": 145,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\oauth-status\\route.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
      "line": 37,
      "endLine": 37,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "app\\api\\admin\\oauth-status\\route.ts",
      "ruleId": "max-depth",
      "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
      "line": 91,
      "endLine": 93,
      "severity": 2,
      "nodeType": "IfStatement"
    },
    {
      "filePath": "app\\api\\admin\\realtime-events\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (85). Maximum allowed is 50.",
      "line": 40,
      "endLine": 124,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\realtime-events\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Method 'start' has too many lines (63). Maximum allowed is 50.",
      "line": 50,
      "endLine": 112,
      "severity": 2,
      "nodeType": "Property"
    },
    {
      "filePath": "app\\api\\admin\\realtime-events\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'monitorDataChanges' has too many lines (68). Maximum allowed is 50.",
      "line": 206,
      "endLine": 273,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\realtime-events\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (59). Maximum allowed is 50.",
      "line": 285,
      "endLine": 343,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\admin\\scraping-metrics\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (81). Maximum allowed is 50.",
      "line": 27,
      "endLine": 107,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\analytics\\web-vitals\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (53). Maximum allowed is 50.",
      "line": 18,
      "endLine": 70,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\analytics\\web-vitals\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'GET' has too many lines (57). Maximum allowed is 50.",
      "line": 75,
      "endLine": 131,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\cron\\auto-scrape\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'POST' has too many lines (77). Maximum allowed is 50.",
      "line": 8,
      "endLine": 84,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\cron\\quality-check\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'POST' has too many lines (71). Maximum allowed is 50.",
      "line": 17,
      "endLine": 87,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\cron\\quality-check\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'performDataQualityCheck' has too many lines (57). Maximum allowed is 50.",
      "line": 89,
      "endLine": 145,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\dashboard\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (61). Maximum allowed is 50.",
      "line": 9,
      "endLine": 69,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\firecrawl\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (59). Maximum allowed is 50.",
      "line": 93,
      "endLine": 151,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\monitoring\\api-usage\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'GET' has too many lines (62). Maximum allowed is 50.",
      "line": 10,
      "endLine": 71,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\monitoring\\api-usage\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (62). Maximum allowed is 50.",
      "line": 73,
      "endLine": 134,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\pipeline\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (78). Maximum allowed is 50.",
      "line": 25,
      "endLine": 102,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\scheduler\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'GET' has too many lines (69). Maximum allowed is 50.",
      "line": 88,
      "endLine": 156,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\scheduler\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (72). Maximum allowed is 50.",
      "line": 158,
      "endLine": 229,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\search\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (95). Maximum allowed is 50.",
      "line": 5,
      "endLine": 99,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\tavily\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'performTavilySearch' has too many lines (58). Maximum allowed is 50.",
      "line": 67,
      "endLine": 124,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\test-integration\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'POST' has too many lines (124). Maximum allowed is 50.",
      "line": 7,
      "endLine": 130,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\test-pipeline-run\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'mapExtractedDataToTruckSchema' has too many lines (54). Maximum allowed is 50.",
      "line": 18,
      "endLine": 71,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\test-pipeline-run\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'handleFirecrawlStage' has too many lines (58). Maximum allowed is 50.",
      "line": 73,
      "endLine": 130,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\test-pipeline-run\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'POST' has too many lines (98). Maximum allowed is 50.",
      "line": 214,
      "endLine": 311,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\api\\trucks\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'GET' has too many lines (59). Maximum allowed is 50.",
      "line": 7,
      "endLine": 65,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\auth\\callback\\route.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'GET' has too many lines (93). Maximum allowed is 50.",
      "line": 8,
      "endLine": 100,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\login\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'EmailLoginForm' has too many lines (57). Maximum allowed is 50.",
      "line": 27,
      "endLine": 83,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\login\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'LoginPage' has too many lines (107). Maximum allowed is 50.",
      "line": 139,
      "endLine": 245,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\middleware.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'middleware' has too many lines (93). Maximum allowed is 50.",
      "line": 6,
      "endLine": 98,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'TruckListSection' has too many lines (58). Maximum allowed is 50.",
      "line": 259,
      "endLine": 316,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "app\\page.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'FoodTruckFinder' has too many lines (52). Maximum allowed is 50.",
      "line": 451,
      "endLine": 502,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\MapDisplay.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (90). Maximum allowed is 50.",
      "line": 58,
      "endLine": 147,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\SearchFilters.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'MainSearchSection' has too many lines (53). Maximum allowed is 50.",
      "line": 12,
      "endLine": 64,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\SearchFilters.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'SearchFilters' has too many lines (83). Maximum allowed is 50.",
      "line": 176,
      "endLine": 258,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\TruckCard.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'TruckCard' has too many lines (55). Maximum allowed is 50.",
      "line": 317,
      "endLine": 371,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'useSystemMetrics' has too many lines (53). Maximum allowed is 50.",
      "line": 63,
      "endLine": 115,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'SystemAlerts' has too many lines (57). Maximum allowed is 50.",
      "line": 180,
      "endLine": 236,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\admin\\RealtimeStatusIndicator.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'RealtimeStatusIndicator' has too many lines (140). Maximum allowed is 50.",
      "line": 260,
      "endLine": 399,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\admin\\cleanup\\CleanupResults.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Function 'CleanupResults' has too many lines (86). Maximum allowed is 50.",
      "line": 16,
      "endLine": 101,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "components\\ui\\UseToast.ts",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (55). Maximum allowed is 50.",
      "line": 65,
      "endLine": 119,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\carousel.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (91). Maximum allowed is 50.",
      "line": 48,
      "endLine": 138,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\chart.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (142). Maximum allowed is 50.",
      "line": 113,
      "endLine": 254,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\chart.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (77). Maximum allowed is 50.",
      "line": 174,
      "endLine": 250,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\dataQualityCharts.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (60). Maximum allowed is 50.",
      "line": 71,
      "endLine": 130,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\sidebar.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (96). Maximum allowed is 50.",
      "line": 57,
      "endLine": 152,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\sidebar.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (92). Maximum allowed is 50.",
      "line": 164,
      "endLine": 255,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "components\\ui\\simpleQualityPanel.tsx",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (93). Maximum allowed is 50.",
      "line": 13,
      "endLine": 105,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "hooks\\UseToast.ts",
      "ruleId": "max-lines-per-function",
      "message": "Arrow function has too many lines (55). Maximum allowed is 50.",
      "line": 65,
      "endLine": 119,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "hooks\\useDataCleanup.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'useDataCleanup' has too many lines (72). Maximum allowed is 50.",
      "line": 26,
      "endLine": 97,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "hooks\\useRealtimeAdminEvents.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'createEventSourceConnection' has too many lines (90). Maximum allowed is 50.",
      "line": 110,
      "endLine": 199,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "hooks\\useRealtimeAdminEvents.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'useRealtimeAdminEvents' has too many lines (139). Maximum allowed is 50.",
      "line": 201,
      "endLine": 339,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "lib\\ScraperEngine.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async method 'scrapeWebsite' has too many lines (65). Maximum allowed is 50.",
      "line": 110,
      "endLine": 174,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\ScraperEngine.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
      "line": 110,
      "endLine": 110,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\ScraperEngine.ts",
      "ruleId": "max-lines-per-function",
      "message": "Method 'assessTruckData' has too many lines (76). Maximum allowed is 50.",
      "line": 390,
      "endLine": 465,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\ScraperEngine.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async method 'makeGeminiRequest' has too many lines (55). Maximum allowed is 50.",
      "line": 693,
      "endLine": 747,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static async method 'runFullCleanup' has too many lines (55). Maximum allowed is 50.",
      "line": 38,
      "endLine": 92,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static async method 'removePlaceholders' has too many lines (65). Maximum allowed is 50.",
      "line": 187,
      "endLine": 251,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
      "line": 187,
      "endLine": 187,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
      "line": 256,
      "endLine": 256,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-depth",
      "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
      "line": 272,
      "endLine": 283,
      "severity": 2,
      "nodeType": "TryStatement"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static async method 'fixCoordinates' has too many lines (54). Maximum allowed is 50.",
      "line": 295,
      "endLine": 348,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 29 to the 15 allowed.",
      "line": 295,
      "endLine": 295,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-depth",
      "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
      "line": 330,
      "endLine": 341,
      "severity": 2,
      "nodeType": "TryStatement"
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
      "line": 353,
      "endLine": 353,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "sonarjs/cognitive-complexity",
      "message": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
      "line": 390,
      "endLine": 390,
      "severity": 2,
      "nodeType": null
    },
    {
      "filePath": "lib\\data-quality\\batchCleanup.ts",
      "ruleId": "max-depth",
      "message": "Blocks are nested too deeply (5). Maximum allowed is 4.",
      "line": 411,
      "endLine": 418,
      "severity": 2,
      "nodeType": "TryStatement"
    },
    {
      "filePath": "lib\\data-quality\\duplicatePrevention.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static method 'calculateSimilarity' has too many lines (57). Maximum allowed is 50.",
      "line": 101,
      "endLine": 157,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\discoveryEngine.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async method 'isFoodTruckUrl' has too many lines (86). Maximum allowed is 50.",
      "line": 363,
      "endLine": 448,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\discoveryEngine.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async method 'storeDiscoveredUrl' has too many lines (58). Maximum allowed is 50.",
      "line": 605,
      "endLine": 662,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\firecrawl.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async method 'crawlWebsite' has too many lines (60). Maximum allowed is 50.",
      "line": 145,
      "endLine": 204,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\gemini\\promptTemplates.ts",
      "ruleId": "max-lines-per-function",
      "message": "Method 'foodTruckExtraction' has too many lines (69). Maximum allowed is 50.",
      "line": 151,
      "endLine": 219,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "lib\\monitoring\\apiMonitor.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static method 'generateAlerts' has too many lines (93). Maximum allowed is 50.",
      "line": 191,
      "endLine": 283,
      "severity": 2,
      "nodeType": "MethodDefinition"
    },
    {
      "filePath": "lib\\performance\\databaseCache.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async arrow function has too many lines (66). Maximum allowed is 50.",
      "line": 78,
      "endLine": 143,
      "severity": 2,
      "nodeType": "ArrowFunctionExpression"
    },
    {
      "filePath": "lib\\performance\\webVitals.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'getPerformanceOptimizationSuggestions' has too many lines (102). Maximum allowed is 50.",
      "line": 221,
      "endLine": 322,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "lib\\pipelineProcessor.ts",
      "ruleId": "max-lines-per-function",
      "message": "Function 'buildTruckDataSchema' has too many lines (66). Maximum allowed is 50.",
      "line": 35,
      "endLine": 100,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "lib\\pipelineProcessor.ts",
      "ruleId": "max-lines-per-function",
      "message": "Async function 'processScrapingJob' has too many lines (106). Maximum allowed is 50.",
      "line": 156,
      "endLine": 261,
      "severity": 2,
      "nodeType": "FunctionDeclaration"
    },
    {
      "filePath": "lib\\security\\auditLogger.ts",
      "ruleId": "max-params",
      "message": "Static async method 'logAdminAction' has too many parameters (7). Maximum allowed is 4.",
      "line": 42,
      "endLine": 42,
      "severity": 2,
      "nodeType": "FunctionExpression"
    },
    {
      "filePath": "lib\\security\\auditLogger.ts",
      "ruleId": "max-params",
      "message": "Static async method 'logAuthEvent' has too many parameters (5). Maximum allowed is 4.",
      "line": 117,
      "endLine": 117,
      "severity": 2,
      "nodeType": "FunctionExpression"
    },
    {
      "filePath": "lib\\security\\auditLogger.ts",
      "ruleId": "max-params",
      "message": "Static async method 'logDataAccess' has too many parameters (6). Maximum allowed is 4.",
      "line": 143,
      "endLine": 143,
      "severity": 2,
      "nodeType": "FunctionExpression"
    },
    {
      "filePath": "lib\\security\\rateLimiter.ts",
      "ruleId": "max-lines-per-function",
      "message": "Static method 'checkRateLimit' has too many lines (69). Maximum allowed is 50.",
      "line": 51,
      "endLine": 119,
      "severity": 2,
      "nodeType": "MethodDefinition"
    }
  ]
}
